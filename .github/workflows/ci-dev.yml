name: ci for development

on:
  push:
    branches:
      - development
  pull_request:
    branches:
      - development

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install SonarScanner
        env:
          PATH: $HOME/.dotnet/tools:$PATH
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Begin SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          PATH: $HOME/.dotnet/tools:$PATH
        run: |
          dotnet sonarscanner begin \
            /k:"<PROJECT_KEY>" \
            /o:"<ORG_KEY>" \
            /d:sonar.token="$SONAR_TOKEN" \
            /d:sonar.cs.opencover.reportsPaths="TestResults/coverage.opencover.xml"

      - name: Restore and Build
        run: |
          dotnet restore
          dotnet build --no-restore --configuration Release

      - name: Run tests with coverage
        env:
          PATH: $HOME/.dotnet/tools:$PATH
        run: |
          dotnet test Wildlife_Tests/Wildlife_Tests.csproj \
            --no-build \
            --configuration Release \
            /p:CollectCoverage=true \
            /p:CoverletOutput=TestResults/ \
            /p:CoverletOutputFormat=opencover

      - name: End SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          PATH: $HOME/.dotnet/tools:$PATH
        run: dotnet sonarscanner end /d:sonar.token="$SONAR_TOKEN"
