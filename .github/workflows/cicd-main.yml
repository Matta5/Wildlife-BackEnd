name: CI/CD for production

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Run tests with coverage
        run: |
          dotnet test ./Wildlife_Tests/Wildlife_Tests.csproj \
          --no-build --configuration Release \
          /p:CollectCoverage=true \
          /p:CoverletOutputFormat=opencover \
          /p:CoverletOutput=./TestResults/coverage.opencover.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=Matta5_Wildlife-BackEnd
            -Dsonar.organization=mathijs-van-den-heilignberg
            -Dsonar.cs.opencover.reportsPaths=**/coverage.opencover.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Backend Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/wildlife-backend:latest . -f Wildlife_API/Dockerfile
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/wildlife-backend:latest